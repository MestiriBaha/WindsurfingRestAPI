// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WindsurfingRestAPI.DBcontext;

#nullable disable

namespace WindsurfingRestAPI.Migrations
{
    [DbContext(typeof(Windsurfdatabase))]
    [Migration("20230124224720_windsurfing2")]
    partial class windsurfing2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SpotWindsurfer", b =>
                {
                    b.Property<string>("SpotsName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("WindsurfersID")
                        .HasColumnType("int");

                    b.HasKey("SpotsName", "WindsurfersID");

                    b.HasIndex("WindsurfersID");

                    b.ToTable("SpotWindsurfer");
                });

            modelBuilder.Entity("WindsurfingRestAPI.Entities.Spot", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Hearts")
                        .HasColumnType("int");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name");

                    b.ToTable("Spots");
                });

            modelBuilder.Entity("WindsurfingRestAPI.Entities.Windsurfer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Windsurfers");
                });

            modelBuilder.Entity("SpotWindsurfer", b =>
                {
                    b.HasOne("WindsurfingRestAPI.Entities.Spot", null)
                        .WithMany()
                        .HasForeignKey("SpotsName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WindsurfingRestAPI.Entities.Windsurfer", null)
                        .WithMany()
                        .HasForeignKey("WindsurfersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
